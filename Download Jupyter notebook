1. Add a new cell in notebook
2. Copy these python code into this cell
========================================
import os
import tarfile

def recursive_files(dir_name='.', ignore=None):
    for dir_name,subdirs,files in os.walk(dir_name):
        if ignore and os.path.basename(dir_name) in ignore: 
            continue

        for file_name in files:
            if ignore and file_name in ignore:
                continue

            yield os.path.join(dir_name, file_name)

def make_tar_file(dir_name='.', tar_file_name='tarfile.tar', ignore=None):
    tar = tarfile.open(tar_file_name, 'w')

    for file_name in recursive_files(dir_name, ignore):
        tar.add(file_name)

    tar.close()


dir_name = '.'
tar_file_name = 'term1-proj-1.tar'
ignore = {'.ipynb_checkpoints', '__pycache__', tar_file_name}
make_tar_file(dir_name, tar_file_name, ignore)
===========================================
3. Run this cell
4. Goto Jupyter notebook file page to find this tar file

Load original cvs file and save all data to a local file from dataframe command:
Note: have to remove the option likes parse_dates=['date'] from read_cvs command
================================================================================
df  = pd.read_csv('../../data/project_5_yr/yr-quotemedia.csv')
file_name='yr-quotemedia.csv'
df.to_csv(file_name, index=False)
print('finished')

Change notebook directory
=========================
import os
os.chdir("/home/udi/foo")

import os

abspath = os.path.abspath(__file__)
dname = os.path.dirname(abspath)
os.chdir(dname)

import sys
import os
working= os.environ.get("WORKING_DIRECTORY","/some/default")
if len(sys.argv) > 1: working = sys.argv[1]
os.chdir( working )
==========================

==========================================

Utilities:
List all file in current dir
============================================
import os

for root, dirs, files in os.walk("."):  
    for filename in files:
        print(root, filename)
============================================
Read and write a csv file
============================================
import pandas as pd
path = './.Trash-0/files/'
file_name='profiles_20170918.csv'
df = pd.read_csv(path + file_name, index_col=False)
print(df)
df.to_csv(file_name, index=False)
print('finished')
============================================

==========================================

5. Modified the first command to load all lib files
===================================================
import sys
!{sys.executable} -m pip install --user -r requirements.txt
===================================================

6. Problem: FeatureNotFound: Couldn't find a tree builder with the features you requested: xml. Do you need to install a parser library?
Fixed: Create a new cell in jupyter notebook; add this command and run this cell: !{sys.executable} -m pip install --user lxml
used these command to test lib:
#import bs4.builder.htmlparser
#import bs4.builder._lxml
#import bs4.builder._html5lib
import lxml

How to start jupyter notebook from Ubuntu terminal
==================================================
Change directory to jupyter notebook file located dir
Type command: jupyter notebook 


Download the data package from a directory
==========================================
1. Change current directory and display all data files
import os
print(os.environ['ZIPLINE_ROOT'])
os.chdir(os.environ['ZIPLINE_ROOT'])
for root, dirs, files in os.walk("."):  
    for filename in files:
        print(root, filename)
========================================================================
import os

def convert_bytes(num):
    """
    this function will convert bytes to MB.... GB... etc
    """
    for x in ['bytes', 'KB', 'MB', 'GB', 'TB']:
        if num < 1024.0:
            return "%3.1f %s" % (num, x)
        num /= 1024.0

def file_size(file_path):
    """
    this function will return the file size
    """
    if os.path.isfile(file_path):
        file_info = os.stat(file_path)
        return convert_bytes(file_info.st_size)
    
print('../../data/project_8_barra/')
os.chdir('../../data/project_8_barra/')
for root, dirs, files in os.walk("."):  
    for filename in files:
        print(root, filename, file_size(filename))
        

2. Modified write to tar file code, and generated a data tar file in working directory
import os
import tarfile

def recursive_files(dir_name='.', ignore=None, filelist=None):
    for dir_name,subdirs,files in os.walk(dir_name):
        if ignore and os.path.basename(dir_name) in ignore: 
            continue
        for file_name in files:
            if ignore and file_name in ignore:
                continue
            if filelist: 
                if file_name in filelist:
                    yield os.path.join(dir_name, file_name)
            else:
                yield os.path.join(dir_name, file_name)

def make_tar_file(dir_name='.', tar_file_name='tarfile.tar', ignore=None, filelist=None):
    tar = tarfile.open(tar_file_name, 'w')
    for file_name in recursive_files(dir_name, ignore, filelist):
        print(file_name)
        tar.add(file_name)
    tar.close()

dir_name = '.'
tar_file_name = '/home/workspace/term2-proj-data-4.tar'
filelist={'covariance.2008.pickle', 'pandas-frames.2008.pickle'}
ignore = {'.ipynb_checkpoints', '__pycache__', tar_file_name}
make_tar_file(dir_name, tar_file_name, ignore, filelist)

Comment:  This line is very important:
tar_file_name = '/home/workspace/term2-proj-data-3.tar'

To fix this problem:
To change this limit, set the config variable `--NotebookApp.iopub_data_rate_limit`.
Modify Jupyter notebook configuration file
==========================================
1. Use this command to create a config file
jupyter notebook --generate-config
This command creating a file: /home/yangnie/.jupyter/jupyter_notebook_config.py

2. Use gedit to open this file:
And modify this line to: c.NotebookApp.iopub_data_rate_limit = 1000000000



Copy the data files to workspace
================================
1. !cp -r ../../data/ ../workspace/
2. !zip -r data.zip data/
3. download data.zip from workspace directory to local PC
4. Download your ipynb file 

display file list:
====================
from IPython.display import FileLink, FileLinks
FileLinks('/home/workspace/')

